 [ВОСПРОИЗВЕДЕНИЕ МУЗЫКИ] 



 DOUG LLOYD: Хорошо, теперь мы поговорили 

 о паре разных алгоритмов сортировки, которые 

 Надеюсь, с ними довольно просто работать. 

 У нас есть сортировка по пузырькам, сортировка по вставкам и сортировка по выделению. 

 И мы знаем, что общего у всех 

 является то, что они имеют своего рода наихудший сценарий времени выполнения n в квадрате. 

 Можем ли мы сделать лучше, чем это? 

 Ну, ответ, да, мы можем, 

 используя алгоритм, называемый сортировкой слиянием. 

 Теперь в сортировке слиянием идея состоит в том, чтобы сортировать меньшие массивы 

 а затем объединить эти массивы вместе или объединить их, 

 как в названии самого алгоритма, в отсортированном порядке. 

 Таким образом, вместо того, чтобы думать о том, у нас есть один массив из шести элементов, 

 вместо этого давайте подумаем, что у нас есть шесть одноэлементных массивов, 

 а затем давайте просто рекомбинировать их в правильном порядке 

 и объединить их вместе. 

 Это был бы один из способов сортировки. 

 И это то, что делает сортировка слиянием. 

 И это использует то, что называется рекурсией, которая 

 мы скоро поговорим в другом видео. 

 И если вы хотите лучше понять, как работает рекурсия, 

 Вы можете посмотреть это видео 

 прежде чем прийти и смотреть это, потому что это идет 

 говорить о рекурсии совсем немного. 

 Сортировка слиянием определенно самая сложная 

 из четырех различных видов, которые мы охватываем в классе. 

 И поэтому я собираюсь пройти через это немного медленнее 

 чем другие. 

 Но сам алгоритм сортировки слиянием на самом деле состоит из нескольких шагов. 

 Мы в основном собираемся сказать, мы собираемся 

 отсортировать левую половину массива, отсортировать правую половину массива, 

 а затем объединить две половинки вместе. 

 В этом и заключается суть сортировки слиянием. 

 Конечно, на практике это немного более подробно, чем это, 

 но давайте пройдем через это сейчас. 

 Итак, вот тот же массив из шести элементов, который мы сортировали все время. 

 И мы собираемся начать следовать нашим шагам псевдокода, 

 что мы хотим отсортировать левую половину этого кирпича красного массива. 

 Так что сейчас мы просто сосредоточимся на этой части. 

 И на самом деле, просто чтобы сделать вещи немного проще, 

 и потому, что я покрасил разные вещи по-разному 

 на протяжении всего этого видео мы будем ссылаться 

 к этой половине массива, это левая половина общего красного массива, 

 с этого момента, это фиолетовая половина массива. 

 Все в порядке? 

 Итак, мы сейчас находимся в середине сортировки левой половины массива. 

 Но мы не знаем, как это сделать. 

 Мы не знаем, как отсортировать левую половину массива. 

 Так почему бы нам просто не вернуться к нашим шагам сортировки слиянием снова? 

 Хорошо, хорошо, если я не знаю, как отсортировать левую половину массива, 

 Я просто собираюсь начать снова. 

 Сортировка левой половины этого массива. 

 Теперь я просто хочу сосредоточиться на этой части массива, левой половине. 

 И я как бы произвольно решаю, что моя левая половина 

 будет меньше моей правой половины. 

 У меня есть три элемента. 

 Я не могу разделить это равномерно. 

 Я не могу иметь один и 1/2 элемента на каждой стороне. 

 Так что, пока я последовательный, пока я всегда выбираю, в этом случае, 

 левая сторона меньше, что будет хорошо для целей сортировки слиянием. 

 Так что теперь я остался с этим единственным элементом, с этой пятеркой. 

 Как отсортировать массив из одного элемента? 

 Что ж, хорошая новость заключается в том, что мне вообще не нужно это разбирать. 

 Одноэлементный массив обязательно должен быть отсортирован. 

 Так что я могу сказать, что если я сортирую левую половину фиолетовой части, 

 это отсортировано. 

 Итак, мы просто собираемся назвать это отсортированным и пока отложим. 

 Итак, теперь я хочу вернуться к правой половине пурпурной части. 

 Вот так 

 Как мне отсортировать этот массив, этот подмассив? 

 Давайте просто вернемся к нашим шагам снова. 

 Я хочу отсортировать только левую половину. 

 Левая половина теперь два. 

 Это единственный элемент. 

 Я знаю, как отсортировать один элемент. 

 Итак, я отсортировал левую половину этого, левую половину 

 правой половины фиолетового. 

 Вот где мы. 

 Это отсортировано. 

 Теперь я возвращаюсь и сортирую правую половину левой половины 

 из фиолетового, который является одним. 

 Один - это отдельный элемент. 

 Это действительно легко сортировать. 

 Это в отсортированном положении. 

 Теперь я впервые достигаю третьего шага сортировки слиянием, 

 где я объединяю две половины вместе. 

 Итак, что мне нужно сделать, так это рассмотреть эти две светло-зеленые половинки. 

 И я должен решить, какой из них имеет нижний элемент. 

 В этом случае это один. 

 Так что я делаю, я беру один и ставлю его 

 в первой позиции какого-то нового гипотетического массива. 

 Затем я сравниваю два с ничем и спрашиваю, какой из них ниже. 

 Ну, два или ничего. 

 Что ниже, это два. 

 Итак, теперь давайте перефразируем картину, потому что, если мы помним 

 Говоря о рекурсии, мы только фокусируемся 

 на левой половине общего кирпично-красного массива, 

 который мы тогда назвали фиолетовый массив. 

 К этому моменту в наших шагах, относительно пурпурного массива, 

 мы отсортировали левую половину, а это пять, 

 и правая половина, которая была первоначально два и один, 

 но теперь мы сделали эти шаги слияния, 

 и мы получили это в правильном порядке. 

 Итак, теперь мы на третьем шаге для всего фиолетового массива, 

 потому что мы уже вроде левой половины фиолетового массива 

 и правая половина фиолетового массива. 

 Итак, теперь нам нужно объединить эти две половинки вместе. 

 И так же, как мы сделали секунду назад с двумя и одним, 

 мы собираемся сравнить первый элемент левой части 

 и первый элемент правой части и выяснить, какой из них меньше, 

 и сделать это первым элементом нашего нового массива. 

 Поэтому я сравниваю пять и один. 

 И я говорю, какой из них меньше? 

 Ну, это один, поэтому один становится первым элементом 

 этого нового трехэлементного массива. 

 Теперь я должен принять другое решение. 

 Пять ниже или два ниже? 

 Ну, два ниже. 

 Таким образом, два становятся следующим элементом нашего слияния. 

 Тогда я говорю, пять ниже или ничего ниже? 

 Ну, ясно, в этом случае единственный вариант, который я оставил, - пять. 

 И вот теперь, на этом этапе процесса, 

 давайте снова подумаем рекурсивно о том, где мы находимся. 

 Мы отсортировали весь красный массив, мы только что сделали первый шаг. 

 Мы отсортировали левую часть. 

 Мы сделали это рекурсивно, но мы отсортировали левую часть 

 из общего красного массива. 

 Так что мы можем отложить это сейчас, 

 потому что теперь мы должны перейти к следующему шагу процесса сортировки слиянием, который 

 это отсортировать правую половину этого красного массива. 

 Итак, давайте перейдем и сосредоточимся на правой половине. 

 Мы собираемся пройти точно такие же шаги 

 что мы только что прошли с левой частью. 

 Но теперь мы собираемся сделать это с этой красной частью справа. 

 Поэтому я хочу отсортировать левую половину этого массива. 

 Ну, это довольно просто. 

 Я просто произвольно снова делю это. 

 Я смотрю на это. 

 Я говорю, хорошо, три - это один элемент. 

 Отдельный элемент уже отсортирован, поэтому я не 

 надо делать все что угодно. 

 Я могу просто отложить это и сказать, три уже отсортированы. 

 Теперь я хочу отсортировать правую половину красного кирпича, 

 но все еще красный, половина массива, который является этим разделом. 

 Как мне это сделать? 

 Ну, это больше, чем один элемент. 

 Так что я собираюсь вернуться к началу моего процесса снова. 

 Я собираюсь отсортировать левую половину этого массива. 

 Итак, я смотрю и говорю, вот левая половина. 

 Сейчас шесть. 

 Это уже отсортировано. 

 Теперь я собираюсь отсортировать правую половину массива. 

 Сейчас четыре. 

 Это уже отсортировано. 

 Теперь я снова попадаю на шаг слияния, где 

 Я должен снова сделать такого рода параллельные сравнения. 

 Какой из них ниже? 

 Шесть ниже или четыре ниже? 

 Ну, четыре ниже, так что становится первым элементом 

 нашего нового объединенного небольшого подмассива здесь. 

 И тогда мне приходится выбирать между шестью и ничем. 

 И я говорю, шесть - самый низкий оставшийся. 

 Итак, теперь я отсортировал левую половину правой половины. 

 И я отсортировал правую половину правой половины. 

 Итак, теперь я хочу объединить эти две части вместе. 

 И снова мы собираемся сделать точно такой же процесс 

 что мы сделали для левой части. 

 Я собираюсь сказать, три ниже или четыре? 

 Ну, это три. 

 И тогда я собираюсь сказать, четыре ниже или ничего? 

 Там ничего не осталось на левой стороне, то 

 Я должен знать, что все справа имеет 

 быть больше, чем все, что находится в объединенном массиве прямо сейчас. 

 Поэтому вместо того, чтобы сказать: «Хорошо, я вставлю четыре, а потом я вставлю шесть, 

 потому что осталась только одна сторона, все должно идти. 

 Так что все сводится. 

 И давайте снова возьмем секунду и подумаем о том, где мы находимся. 

 На данный момент, для оригинального массива красного кирпича, с которого мы начали, 

 мы прошли два наших шага псевдокода. 

 У нас вроде левая половина этого общего кирпично-красного массива. 

 И мы отсортировали правую половину этого общего кирпично-красного массива. 

 И вот теперь последнее, что мы должны сделать, это объединить эти две половинки вместе. 

 И, как и прежде, мы продолжаем задавать себе тот же вопрос снова. 

 Что ниже, один или три? 

 Обратите внимание на маленькую черную линию, разделяющую две половины, чтобы сделать ее более 

 визуально ясно. 

 Что ниже, один или три? 

 Ну, так и есть. 

 Теперь я снова задаю себе вопрос, который ниже, два или три? 

 Это было бы два. 

 Что ниже, пять или три? 

 Это три. 

 Пять или четыре? 

 Сейчас четыре. 

 Пять или шесть. 

 Сейчас пять. 

 Шесть или ничего? 

 Сейчас шесть. 

 И так, проходя этот процесс рекурсивно 

 и разбить мою проблему на все меньшие подмассивы, 

 сортировка, объединение их, после ряда шагов, 

 Я теперь закончил свой род. 

 И у меня все в порядке, здесь темно-синий. 

 Один два три четыре пять шесть. 

 Это не обязательно так просто, как что-то 

 например, сортировка по пузырькам, сортировка по вставкам или сортировка по выделению. 

 Но есть ли здесь какие-то преимущества? 

 Ну, ответ: да, есть. 

 В худшем случае мы должны разделить n элементов. 

 И тогда мы должны рекомбинировать их, эффективно удваивая отсортированные массивы 

 как мы их строим. 

 Итак, мы берем два одноэлементных массива и превращаем их в двухэлементный массив. 

 Мы берем два двухэлементных массива. 

 Мы превращаем его в массив из четырех элементов. 

 И так далее, и так далее, и так далее. 

 В лучшем случае, вроде сортировки выбора, 

 массив уже отсортирован, но мы этого не знаем. 

 Мы не узнаем об этом, пока не разберем и не рекомбинируем с этим алгоритмом. 

 Здесь нет ничего другого, кроме предварительного поиска. 

 Но это также добавит дополнительное время. 

 Таким образом, в результате мы имеем n элементов: 

 и нам, возможно, придется объединить их, если мы удвоимся - войдите n раз. 

 Математически, вот как это работает. 

 И так на самом деле, в отличие от других алгоритмов 

 в худшем случае мы рассмотрели время выполнения сортировки слиянием 

 это O из п журнала N, который в целом будет меньше или быстрее, чем п 

 в квадрате. 

 В лучшем случае, потому что нам еще предстоит пройти этот процесс 

 снова, это все еще n log n. 

 Так что в лучшем случае это может быть медленнее, чем, скажем, 

 пузырьковая сортировка, где массив оказывается идеально отсортированным. 

 Как вы помните, омега существует n, а не n log n. 

 Но в худшем случае или даже в среднем случае, 

 сортировка слияний будет на самом деле быстрее, за счет 

 больше памяти, потому что мы должны рекомбинировать и создавать 

 новые сегменты в памяти для наших подмассивов. 

 Таким образом, сортировка слиянием - действительно мощный инструмент, который есть в вашем наборе инструментов. 

 как только вы поймете рекурсию, потому что она может сделать скорость сортировки 

 массив, который намного быстрее. 

 Меня зовут Дуг Ллойд. 

 Это CS50. 



