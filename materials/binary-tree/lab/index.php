<?php
include ("index.config.php");
include ($r_base."assets/php_modules/addons.php");
?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <?php include ($r_base."assets/php_modules/head.tpt.php"); ?>
</head>
<body>
<div class='container-fluid'>
<?php include ($r_base."assets/php_modules/header.tpt.php"); ?>  
<div class="row">
<?php include ($r_base."assets/php_modules/aside.tpt.php"); ?>
<main class="col-md markdown-body">
<h2 id="1">1. Постановка задачи</h2>
<div class="block__text text-justify">
    &#8195;&#8195;1.&#8195;Сформировать идеально сбалансированное бинарное дерево, тип информационного поля указан в варианте.
    <br>
    &#8195;&#8195;2.&#8195;Распечатать полученное дерево.
    <br>
    &#8195;&#8195;3.&#8195;Выполнить обработку дерева в соответствии с заданием, вывести полученный результат.
    <br>
    &#8195;&#8195;4.&#8195;Преобразовать идеально сбалансированное дерево в дерево поиска.
    <br>
    &#8195;&#8195;5.&#8195;Распечатать полученное дерево.
</div>

<h2 id="2">2. Варианты заданий</h2>
    <div class="block__text text-justify">
        &#8195;&#8195;1.&#8195;Тип информационного поля <code class="highlight">char</code>. Найти количество элементов с заданным ключом.
        <br>
        &#8195;&#8195;2.&#8195;Тип информационного поля <code class="highlight">int</code>. Найти максимальный элемент в дереве.
        <br>
        &#8195;&#8195;3.&#8195;Тип информационного поля <code class="highlight">char*</code>. Найти количество листьев в дереве.
        <br>
        &#8195;&#8195;4.&#8195;Тип информационного поля <code class="highlight">double</code>. Найти минимальный элемент в дереве.
        <br>
        &#8195;&#8195;5.&#8195;Тип информационного поля <code class="highlight">char</code>. Найти высоту дерева.
        <br>
        &#8195;&#8195;6.&#8195;Тип информационного поля <code class="highlight">int</code>. Найти среднее арифметическое элементов дерева.
        <br>
        &#8195;&#8195;7.&#8195;Тип информационного поля <code class="highlight">char*</code>. Найти количество элементов дерева, начинающихся с заданного символа.
        <br>
        &#8195;&#8195;8.&#8195;Тип информационного поля <code class="highlight">char</code>. Найти количество элементов с заданным ключом.
        <br>
        &#8195;&#8195;9.&#8195;Тип информационного поля <code class="highlight">double</code>. Найти максимальный элемент в дереве.
        <br>
        &#8195;&#8195;10.&#8195;Тип информационного поля <code class="highlight">int</code>. Найти количество листьев в дереве.
        <br>
        &#8195;&#8195;11.&#8195;Тип информационного поля <code class="highlight">double</code>. Найти минимальный элемент в дереве.
        <br>
        &#8195;&#8195;12.&#8195;Тип информационного поля <code class="highlight">char</code>. Найти высоту дерева.
        <br>
        &#8195;&#8195;13.&#8195;Тип информационного поля <code class="highlight">int</code>. Найти среднее арифметическое элементов дерева.
        <br>
        &#8195;&#8195;14.&#8195;Тип информационного поля <code class="highlight">char</code>. Найти количество элементов с заданным ключом.
        <br>
        &#8195;&#8195;15.&#8195;Тип информационного поля <code class="highlight">char*</code>. Найти количество элементов дерева, начинающихся с заданного символа
        <br>
        &#8195;&#8195;16.&#8195;Тип информационного поля <code class="highlight">int</code>. Найти максимальный элемент в дереве.
        <br>
        &#8195;&#8195;17.&#8195;Тип информационного поля <code class="highlight">double</code>. Найти количество листьев в дереве.
        <br>
        &#8195;&#8195;18.&#8195;Тип информационного поля <code class="highlight">int</code>. Найти минимальный элемент в дереве.
        <br>
        &#8195;&#8195;19.&#8195;Тип информационного поля <code class="highlight">char</code>. Найти высоту дерева.
        <br>
        &#8195;&#8195;20.&#8195;Тип информационного поля <code class="highlight">double</code>. Найти среднее арифметическое элементов дерева.
        <br>
        &#8195;&#8195;21.&#8195;Тип информационного поля <code class="highlight">char*</code>. Найти количество элементов дерева, начинающихся с заданного символа.
        <br>
        &#8195;&#8195;22.&#8195;Тип информационного поля <code class="highlight">char</code>. Найти количество элементов с заданным ключом.
        <br>
        &#8195;&#8195;23.&#8195;Тип информационного поля <code class="highlight">char*</code>. Найти количество листьев в дереве.
        <br>
        &#8195;&#8195;24.&#8195;Тип информационного поля <code class="highlight">double</code>. Найти максимальный элемент в дереве.
        <br>
        &#8195;&#8195;25.&#8195;Тип информационного поля <code class="highlight">double</code>. Найти минимальный элемент в дереве.
    </div>
<h2 id="3">3. Методические указания</h2>
<div class="block__text text-justify">
    &#8195;&#8195;1.&#8195;Описания структур для формирования деревьев, а также функции для их обработки сохранить в библиотечном файле с расширением <code class="highlight">.h</code> (например, <code class="highlight">point.h</code>). Функцию <code class="highlight">main(</code>) сохранить в файле с расширением <code class="highlight">.cpp</code>. Библиотечный файл подключить с помощью директивы <code class="highlight">#include “имя_файла.h”</code>.
    <br>
    &#8195;&#8195;2.&#8195;Для выделения памяти под информационные поля типа <code class="highlight">char*</code> использовать операцию <code class="highlight">new</code>, для удаления из памяти – операцию <code class="highlight">delete</code>.
    <br>
    &#8195;&#8195;3.&#8195;Для формирования элементов дерева написать отдельные функции.
    <br>
    &#8195;&#8195;4.&#8195;Для формирования дерева, удаления добавления элементов, поиска заданных элементов написать отдельные функции.
    <br>
    &#8195;&#8195;5.&#8195;В функции <code class="highlight">main()</code> должны быть размещены только описания переменных и обращения к соответствующим функциям.
    <br>
    &#8195;&#8195;6.&#8195;Если в дереве отсутствуют элементы, соответствующие критерию поиска (например, при удалении элемента с номером <code class="highlight">k</code>, <code class="highlight">k</code> больше, чем количество элементов в списке), должно быть выведено сообщение о том, что требуемые элементы не найдены.
    <br>
    &#8195;&#8195;7.&#8195;Интерфейс реализовать с помощью текстового меню.
</div>

<h2 id="4">4. Содержание отчета</h2>
<div class="block__text text-justify">
    &#8195;&#8195;1.&#8195;Постановка задачи (общая и для конкретного варианта)
    <br>
    &#8195;&#8195;2.&#8195;Анализ задачи
    <br>
    &#8195;&#8195;&#8195;&#8226;&#8195;Определения функций для реализации поставленных задач
    <br>
    &#8195;&#8195;&#8195;&#8226;&#8195;Определение функции main()
    <br>
    &#8195;&#8195;3.&#8195;Блок-схема
    <br>
    &#8195;&#8195;4.&#8195;Текст программы
    <br>
    &#8195;&#8195;5.&#8195;Тесты
</div>

<?php
if ($sendwork_off == false) { ?>
    <h2 id="5">5. Отправить результат работы</h2>
    <?php include ($r_base."assets/php_modules/form_sendwork.tpt.php"); 
}
?>
</main><!--end main-->
</div><!--end .row-->
<?php include ($r_base."assets/php_modules/footer.tpt.php"); ?>  
</div><!--end .container-fluid-->
<?php include ($r_base."assets/php_modules/scripts.tpt.php"); ?>
</body>
</html>