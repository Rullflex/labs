<?php
include ("index.config.php");
include ($r_base."assets/php_modules/addons.php");
?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <?php include ($r_base."assets/php_modules/head.tpt.php"); ?>
</head>
<body>
<div class='container-fluid'>
<?php include ($r_base."assets/php_modules/header.tpt.php"); ?>  
<div class="row">
<?php include ($r_base."assets/php_modules/aside.tpt.php"); ?>
<main class="col-md markdown-body">

<h2 id="1">1. Постановка задачи</h2>
<ol>
    <li> Создать пользовательский класс с минимальной функциональностью.</li>
    <li> Написать функцию для создания объектов пользовательского класса (ввод исходной информации с клавиатуры) и сохранения их в потоке (файле). </li>
    <li> Написать функцию для чтения и просмотра объектов из потока. </li>
    <li> Написать функцию для удаления объектов из потока в соответствии с заданием варианта. Для выполнения задания выполнить перегрузку необходимых операций.</li>
    <li> Написать функцию для добавления объектов в поток в соответствии с заданием варианта.Для выполнения задания выполнить перегрузку необходимых операций.</li>
    <li> Написать функцию для изменения объектов в потоке в соответствии с заданием варианта. Для выполнения задания выполнить перегрузку необходимых операций.</li>
    <li> Для вызова функций в основной программе предусмотреть меню.</li>

</ol>
<h2 id="2">2. Варианты заданий</h2>

<table>
<thead>
<tr>
<th>Вариант </th>
<th>Задание</th>
</tr>
</thead>
<tbody>
<tr>
<td>1 </td>
<td>Создать класс Time для работы с временными интервалами. Интервал должен быть представлен в виде двух полей: минуты типа int и секунды типа int. при выводе минуты отделяются от секунд двоеточием. 
<br> Реализовать:
<ol>
    <li> сложение временных интервалов (учесть, что в минуте не может быть более 60 секунд)</li>
    <li> сравнение временных интервалов (==)</li>
</ol> Задание:
<ol>
   
    <li> Удалить все записи равные заданному значению.</li>
    <li> Увеличить все записи с заданным значением на 1 минуту 30 секунд.</li>
    <li> Добавить K записей после элемента с заданным номером.</li>
</ol>

</td>
</tr>

<tr>
<td>2 </td>
<td>Создать класс Time для работы с временными интервалами. Интервал должен быть представлен в виде двух полей: минуты типа int и секунды типа int. при выводе минуты отделяются от секунд двоеточием. 
<br> Реализовать:
<ol>
    <li> вычитание временных интервалов(учесть, что в минуте не может быть более 60 секунд)</li>
    <li> сравнение временных интервалов (!=)</li>
</ol> Задание:
<ol>
   
    <li> Удалить все записи не равные заданному значению.</li>
    <li> Уменьшить все записи с заданным значением на 1 минуту 30 секунд. Значение интервала не должно быть меньше 0 минут 0 секунд.</li>
    <li> Добавить K записей в начало файла. </li>
</ol>

</td>
</tr>

<tr>
<td>3 </td>
<td>Создать класс Time для работы с временными интервалами. Интервал должен быть представлен в виде двух полей: минуты типа int и секунды типа int. при выводе минуты отделяются от секунд двоеточием. 
<br> Реализовать:
<ol>
    <li> добавление секунд(учесть, что в минуте не может быть более 60 секунд)</li>
    <li> вычитание секунд</li>
</ol> Задание:
<ol>
   
    <li> Удалить все записи равные заданному значению.</li>
    <li> Уменьшить все записи с заданным значением на 1 минуту 30 секунд. Значение интервала не должно быть меньше 0 минут 0 секунд.</li>
    <li> Добавить K записей после элемента с заданным значением.</li>
</ol>

</td>
</tr>

<tr>
<td>4 </td>
<td>Создать класс Time для работы с временными интервалами. Интервал должен быть представлен в виде двух полей: минуты типа int и секунды типа int. при выводе минуты отделяются от секунд двоеточием. 
<br> Реализовать:
<ol>
    <li> добавление секунд(учесть, что в минуте не может быть более 60 секунд)
</li>
    <li> сравнение временных интервалов (==и !=)</li>
</ol> Задание:
<ol>
   
    <li> Удалить все записи из интервала от k1 до k2, где k1 и k2 переменные типа Time.</li>
    <li> Увеличить все записи с заданным значением на 1 минуту 30 секунд.</li>
    <li> Добавить K записей в начало файла. </li>
</ol>
</td>
</tr>

<tr>
<td>5 </td>
<td>Создать класс Time для работы с временными интервалами. Интервал должен быть представлен в виде двух полей: минуты типа int и секунды типа int. при выводе минуты отделяются от секунд двоеточием. <br> Реализовать:
<ol>
    <li> вычитание секунд
</li>
    <li> сравнение временных интервалов (==и !=)
</li>
</ol> Задание:
<ol>
   
    <li> Удалить все записи большие заданного значения.
</li>
    <li> Увеличить все записи с заданным значением на 1 минуту 30 секунд.</li>
    <li> Добавить K записей после записи с номером N.</li>
</ol>
</td>
</tr>

<tr>
<td>6 </td>
<td>Создать класс Money для работы с денежными суммами. Число должно быть представлено двумя полями: типа long для рублей и типа int для копеек. Дробная часть числа при выводе на экран должна быть отделена от целой части запятой. <br> Реализовать:
<ol>
    <li> сложение денежных сумм,
</li>
    <li> вычитание денежных сумм,
</li>
</ol> Задание:
<ol>
   
    <li> Удалить все записи равные заданному значению.
</li>
    <li> Увеличить все записи с заданным значением на 1 рубль 50 копеек.</li>
    <li> Добавить K записей после элемента с заданным номером.</li>
</ol>
</td>
</tr>


<tr>
<td>7 </td>
<td>Создать класс Money для работы с денежными суммами. Число должно быть представлено двумя полями: типа long для рублей и типа int для копеек. Дробная часть числа при выводе на экран должна быть отделена от целой части запятой. <br> Реализовать:
<ol>
    <li> деление сумм
</li>
    <li> умножение суммы на дробное число
</li>
</ol> Задание:
<ol>
   
    <li> Удалить все записи не равные заданному значению</li>
    <li> Уменьшить все записи с заданным значением в два раза</li>
    <li> Добавить K записей в начало файла.</li>
</ol>
</td>
</tr>

<tr>
<td>8 </td>
<td>Создать класс Money для работы с денежными суммами. Число должно быть представлено двумя полями: типа long для рублей и типа int для копеек. Дробная часть числа при выводе на экран должна быть отделена от целой части запятой. <br> Реализовать:
<ol>
    <li> сложение суммы и дробного числа
</li>
    <li> операции сравнения (>, <, ==)
</li>
</ol> Задание:
<ol>
   
    <li> Удалить все записи из интервала от k1 до k2, где k1 и k2 переменные типа Money</li>
    <li> Увеличить все записи с заданным значением в два раза.</li>
    <li> Добавить K записей в начало файла. </li>
</ol>
</td>
</tr>

<tr>
<td>9 </td>
<td>Создать класс Money для работы с денежными суммами. Число должно быть представлено двумя полями: типа long для рублей и типа int для копеек. Дробная часть числа при выводе на экран должна быть отделена от целой части запятой. <br> Реализовать:
<ol>
    <li> вычитание дробного числа из суммы
</li>
    <li> операции сравнения(==, !=)
</li>
</ol> Задание:
<ol>
   
    <li> Удалить все записи равные заданному значению</li>
    <li> Уменьшить все записи с заданным значением на 1 рубль 50 копеек. Значение интервала не должно быть меньше 0 рублей 0 копеек</li>
    <li> Добавить K записей после элемента с заданным значением.  </li>
</ol>
</td>
</tr>


<tr>
<td>10 </td>
<td>Создать класс Money для работы с денежными суммами. Число должно быть представлено двумя полями: типа long для рублей и типа int для копеек. Дробная часть числа при выводе на экран должна быть отделена от целой части запятой.<br> Реализовать:
<ol>
    <li> операции сравнения(==, !=)
</li>
    <li> вычитание копеек (--) (постфиксная и префиксная формы)
</li>
</ol> Задание:
<ol>
   
    <li> Удалить все записи большие заданного значения</li>
    <li> Увеличить все записи с заданным значением на 1 рубль 50 копеек</li>
    <li> Добавить K записей после записи с номером N.  </li>
</ol>
</td>
</tr>


<tr>
<td>11 </td>
<td>Создать класс Money для работы с денежными суммами. Число должно быть представлено двумя полями: типа long для рублей и типа int для копеек. Дробная часть числа при выводе на экран должна быть отделена от целой части запятой. <br> Реализовать:
<ol>
    <li> операции сравнения(<, >)
</li>
    <li> добавление копеек (++) (постфиксная и префиксная формы)
</li>
</ol> Задание:
<ol>
   
    <li> Удалить все записи большие заданного значения</li>
    <li> Уменьшить все записи с заданным значением в два раза</li>
    <li> Добавить K записей после элемента с заданным номером.  </li>
</ol>
</td>
</tr>

<tr>
<td>12 </td>
<td>Создать класс Pair (пара чисел). Пара должна быть представлено двумя полями: типа int для первого числа и типа double для второго. Первое число при выводе на экран должно быть отделено от второго числа двоеточием. <br> Реализовать:
<ol>
    <li> операции сравнения(<, >)
</li>
    <li> операция ++, которая работает следующим образом: если форма операции префиксная, то увеличивается первое число, если форма операции постфиксная, то увеличивается второе число
</li>
</ol> Задание:
<ol>
   
    <li> Удалить все записи большие заданного значения</li>
    <li> Увеличить все записи с заданным значением на число L</li>
    <li> Добавить K записей после записи с номером N.  </li>
</ol>
</td>
</tr>

<tr>
<td>13 </td>
<td>Создать класс Pair (пара чисел). Пара должна быть представлено двумя полями: типа int для первого числа и типа double для второго. Первое число при выводе на экран должно быть отделено от второго числа двоеточием. <br> Реализовать:
<ol>
    <li> операции сравнения(<, >)
</li>
    <li> операция --, которая работает следующим образом: если форма операции префиксная, то уменьшается первое число, если форма операции постфиксная, то уменьшается второе число
</li>
</ol> Задание:
<ol>
   
    <li> Удалить все записи равные заданному значению</li>
    <li> Уменьшить все записи с заданным значением на число L</li>
    <li> Добавить K записей после элемента с заданным значением.  </li>
</ol>
</td>
</tr>

<tr>
<td>14 </td>
<td>Создать класс Pair (пара чисел). Пара должна быть представлено двумя полями: типа int для первого числа и типа double для второго. Первое число при выводе на экран должно быть отделено от второго числа двоеточием. <br> Реализовать:
<ol>
    <li> операции сравнения(==,!=)
</li>
    <li> вычитание константы из пары (уменьшается первое число, если константа целая, второе, если константа вещественная)
</li>
</ol> Задание:
<ol>
   
    <li> Удалить все записи из интервала от k1 до k2, где k1 и k2 переменные типа Pair</li>
    <li> Увеличить все записи с заданным значением в два раза</li>
    <li> Добавить K записей в начало файла.  </li>
</ol>
</td>
</tr>

<tr>
<td>15 </td>
<td>Создать класс Pair (пара чисел). Пара должна быть представлено двумя полями: типа int для первого числа и типа double для второго. Первое число при выводе на экран должно быть отделено от второго числа двоеточием.  <br> Реализовать:
<ol>
    <li> вычитание пар чисел
</li>
    <li> добавление константы к паре (увеличивается первое число, если константа целая, второе, если константа вещественная)
</li>
</ol> Задание:
<ol>
   
    <li> Удалить все записи меньшие заданного значения</li>
    <li> Увеличить все записи с заданным значением на число L</li>
    <li> Добавить K записей после элемента с заданным номером.  </li>
</ol>
</td>
</tr>

<tr>
<td>16 </td>
<td>Создать класс Pair (пара чисел). Пара должна быть представлено двумя полями: типа int для первого числа и типа double для второго. Первое число при выводе на экран должно быть отделено от второго числа двоеточием.  <br> Реализовать:
<ol>
    <li> вычитание пар чисел
</li>
    <li> добавление константы к паре (увеличивается первое число, если константа целая, второе, если константа вещественная)
</li>
</ol> Задание:
<ol>
   
    <li> Удалить все записи меньшие заданного значения</li>
    <li> Увеличить все записи с заданным значением на число L</li>
    <li> Добавить K записей после элемента с заданным номером.  </li>
</ol>
</td>
</tr>

<tr>
<td>17 </td>
<td>Создать класс Pair (пара чисел). Пара должна быть представлено двумя полями: типа int для первого числа и типа double для второго. Первое число при выводе на экран должно быть отделено от второго числа двоеточием.  <br> Реализовать:
<ol>
    <li> операции сравнения(==,!=)
</li>
    <li> вычитание константы из пары (уменьшается первое число, если константа целая, второе, если константа вещественная)
</li>
</ol> Задание:
<ol>
   
    <li> далить все записи из интервала от k1 до k2, где k1 и k2 переменные типа Pair</li>
    <li> Увеличить все записи с заданным значением в два раза</li>
    <li> Добавить K записей в начало файла.  </li>
</ol>
</td>
</tr>

<tr>
<td>18 </td>
<td>Создать класс Pair (пара чисел). Пара должна быть представлено двумя полями: типа int для первого числа и типа double для второго. Первое число при выводе на экран должно быть отделено от второго числа двоеточием.  <br> Реализовать:
<ol>
    <li> операции сравнения(<, >)
</li>
    <li> операция --, которая работает следующим образом: если форма операции префиксная, то уменьшается первое число, если форма операции постфиксная, то уменьшается второе число
</li>
</ol> Задание:
<ol>
   
    <li> Удалить все записи равные заданному значению</li>
    <li> Уменьшить все записи с заданным значением на число L</li>
    <li> Добавить K записей после элемента с заданным значением.  </li>
</ol>
</td>
</tr>

<tr>
<td>19 </td>
<td>Создать класс Pair (пара чисел). Пара должна быть представлено двумя полями: типа int для первого числа и типа double для второго. Первое число при выводе на экран должно быть отделено от второго числа двоеточием.  <br> Реализовать:
<ol>
    <li> операции сравнения(<, >)
</li>
    <li> операция ++, которая работает следующим образом: если форма операции префиксная, то увеличивается первое число, если форма операции постфиксная, то увеличивается второе число
</li>
</ol> Задание:
<ol>
   
    <li> Удалить все записи большие заданного значения</li>
    <li> Увеличить все записи с заданным значением на число L</li>
    <li> Добавить K записей после записи с номером N.  </li>
</ol>
</td>
</tr>

<tr>
<td>20 </td>
<td>Создать класс Money для работы с денежными суммами. Число должно быть представлено двумя полями: типа long для рублей и типа int для копеек. Дробная часть числа при выводе на экран должна быть отделена от целой части запятой.  <br> Реализовать:
<ol>
    <li> операции сравнения(<, >)
</li>
    <li> добавление копеек (++) (постфиксная и префиксная формы)
</li>
</ol> Задание:
<ol>
   
    <li> Удалить все записи большие заданного значения</li>
    <li> Уменьшить все записи с заданным значением в два раза</li>
    <li> Добавить K записей после элемента с заданным номером.  </li>
</ol>
</td>
</tr>

<tr>
<td>21 </td>
<td>Создать класс Money для работы с денежными суммами. Число должно быть представлено двумя полями: типа long для рублей и типа int для копеек. Дробная часть числа при выводе на экран должна быть отделена от целой части запятой.  <br> Реализовать:
<ol>
    <li> операции сравнения(==, !=)
</li>
    <li> вычитание копеек (--) (постфиксная и префиксная формы)
</li>
</ol> Задание:
<ol>
   
    <li> Удалить все записи большие заданного значения</li>
    <li> Увеличить все записи с заданным значением на 1 рубль 50 копеек</li>
    <li> Добавить K записей после записи с номером N.  </li>
</ol>
</td>
</tr>

<tr>
<td>22 </td>
<td>Создать класс Money для работы с денежными суммами. Число должно быть представлено двумя полями: типа long для рублей и типа int для копеек. Дробная часть числа при выводе на экран должна быть отделена от целой части запятой. <br> Реализовать:
<ol>
    <li> вычитание дробного числа из суммы
</li>
    <li> операции сравнения(==, !=)
</li>
</ol> Задание:
<ol>
   
    <li> Удалить все записи равные заданному значению</li>
    <li> Уменьшить все записи с заданным значением на 1 рубль 50 копеек. Значение интервала не должно быть меньше 0 рублей 0 копеек</li>
    <li> Добавить K записей после элемента с заданным значением.  </li>
</ol>
</td>
</tr>

<tr>
<td>23 </td>
<td>Создать класс Money для работы с денежными суммами. Число должно быть представлено двумя полями: типа long для рублей и типа int для копеек. Дробная часть числа при выводе на экран должна быть отделена от целой части запятой. <br> Реализовать:
<ol>
    <li> сложение суммы и дробного числа </li>
    <li> операции сравнения (>, <, ==)
</li>
</ol> Задание:
<ol>
   
    <li> Удалить все записи из интервала от k1 до k2, где k1 и k2 переменные типа Money</li>
    <li> Увеличить все записи с заданным значением в два раза</li>
    <li> Добавить K записей в начало файла.  </li>
</ol>
</td>
</tr>

</tbody>
</table>

<h2 id="3">3. Содержание отчета</h2>
<ol>
    <li>Постановка задачи (общая и конкретного варианта).</li>
    <li>Описание пользовательского класса.</li>
    <li>Перегруженные операции пользовательского класса.</li>
    <li>Определение функций для работы с файлом (создание, вывод, удаление, добавление, изменение).</li>
    <li>Функция main().</li>
    <li>Объяснение результатов работы программы.</li>
    <li>Ответы на контрольные вопросы.</li>
</ol>
<!-- У отправки поменять только id и номер -->
<?php
if ($sendwork_off == false) { ?>
    <h2 id="4">4. Отправить результат работы</h2>
    <?php include ($r_base."assets/php_modules/form_sendwork.tpt.php"); 
}
?>
</main><!--end main-->
</div><!--end .row-->
<?php include ($r_base."assets/php_modules/footer.tpt.php"); ?>  
</div><!--end .container-fluid-->
<?php include ($r_base."assets/php_modules/scripts.tpt.php"); ?>
</body>
</html>